<?xml version="1.0" encoding="utf-8"?>
<!-- generator="Joomla! - Open Source Content Management" -->
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Introdução - RibaFS Portal</title>
		<description><![CDATA[Servidores linux, Programação web (PHP, Joomla, CakePHP, Laravel), Programação Mobile (Phaser, PhoneGap, Monaca, Unity, etc) entre outros.]]></description>
		<link>http://backup/portal/servidores/postgresql/introducao-ao-postgresql.html</link>
		<lastBuildDate>Sat, 07 Sep 2019 18:54:20 -0300</lastBuildDate>
		<generator>Joomla! - Open Source Content Management</generator>
		<atom:link rel="self" type="application/rss+xml" href="http://backup/portal/servidores/postgresql/introducao-ao-postgresql.feed?type=rss"/>
		<language>pt-br</language>
		<item>
			<title>Novidades do PostgreSQL</title>
			<link>http://backup/portal/servidores/postgresql/introducao-ao-postgresql/novidades-do-postgresql.html</link>
			<guid isPermaLink="true">http://backup/portal/servidores/postgresql/introducao-ao-postgresql/novidades-do-postgresql.html</guid>
			<description><![CDATA[<h4>Novidades do PostgreSQL</h4>

<p><strong>Um panorama das novidades previstas para o PostgreSQL 10</strong><br /><a href="https://www.infoq.com/br/news/2017/05/postgresql-10-features">https://www.infoq.com/br/news/2017/05/postgresql-10-features</a> <br /><br /><strong>PostgreSQL 9.4 e 9.5, e o que mais vem por aí</strong><br /><a href="https://www.infoq.com/br/presentations/postgresql-o-que-mais-vem-por-ai">https://www.infoq.com/br/presentations/postgresql-o-que-mais-vem-por-ai</a> <br /><br /><strong>Novidades com PostgreSQL no ar…</strong><br /><a href="https://savepoint.blog.br/2014/03/25/novidades-com-postgresql-no-ar/">https://savepoint.blog.br/2014/03/25/novidades-com-postgresql-no-ar/</a> <br /><br /><strong>PostgreSQL 9.6: estamos quase lá</strong> <br /><a href="http://eulerto.blogspot.com.br/2016/05/postgresql-96-estamos-quase-la.html">http://eulerto.blogspot.com.br/2016/05/postgresql-96-estamos-quase-la.html</a> <br /><br /><strong>Novidades do PostgreSQL 9.2</strong><br /><a href="http://dextra.com.br/blog/novidades-do-postgresql-9-2/">http://dextra.com.br/blog/novidades-do-postgresql-9-2/</a> <br /><br /><strong>Comentamos algumas das principais novidades no PostgreSQL 9</strong><br /><a href="http://www.bau-de-dev.com/banco-de-dados/postgresql/comentamos-algumas-das-principais-novidades-no-postgresql-9">http://www.bau-de-dev.com/banco-de-dados/postgresql/comentamos-algumas-das-principais-novidades-no-postgresql-9</a> <br /><br /></p>]]></description>
			<category>Introdução</category>
			<pubDate>Tue, 29 Aug 2017 22:09:08 -0300</pubDate>
		</item>
		<item>
			<title>Limites do PostgreSQL</title>
			<link>http://backup/portal/servidores/postgresql/introducao-ao-postgresql/limites-do-postgresql.html</link>
			<guid isPermaLink="true">http://backup/portal/servidores/postgresql/introducao-ao-postgresql/limites-do-postgresql.html</guid>
			<description><![CDATA[<h4 style="margin-bottom: 0cm;"><b>Limites do PostgreSQL</b></h4>

<p style="margin-bottom: 0cm;"><br />Máximo tamanho de banco - Ilimitado</p>

<p style="margin-bottom: 0cm;">Maior tabela - 32 TB</p>

<p style="margin-bottom: 0cm;">Maior registro - 1.6 TB</p>

<p style="margin-bottom: 0cm;">Maior campo - 1 GB</p>

<p style="margin-bottom: 0cm;">Máximo de registros por tabela - Ilimitado</p>

<p style="margin-bottom: 0cm;">Máximo de campos por tabela - 250 - 1600 depende do tipo de campo</p>

<p style="margin-bottom: 0cm;">Máximo de índices por tabela - Ilimitado</p>

<p style="margin-bottom: 0cm;">Fonte: <a href="http://www.postgresql.org/about/">http://www.postgresql.org/about/</a></p>]]></description>
			<category>Introdução</category>
			<pubDate>Tue, 29 Aug 2017 21:55:40 -0300</pubDate>
		</item>
		<item>
			<title>Conceitos Importantes no PostgreSQL</title>
			<link>http://backup/portal/servidores/postgresql/introducao-ao-postgresql/conceitos-postgresql.html</link>
			<guid isPermaLink="true">http://backup/portal/servidores/postgresql/introducao-ao-postgresql/conceitos-postgresql.html</guid>
			<description><![CDATA[<h4>Conceitos Importantes no PostgreSQL</h4>

<p><br /><strong>SGBDRO</strong> - Sistema Gerenciador de Bancos de Dados Relacional e Orientado a Objetos. São sistemas especializados no trabalho com bancos de dados, com muitos recursos para isso.<br /><br /><strong>Cluster</strong> - coleção de bancos de dados. Todos os bancos de dados de uma instalação do servidor.<br /><br /><strong>Banco</strong> <strong>de dados</strong> - coleção de tabelas, usuários, tipos de dados, funções, índices, sequências e outros objetos.<br /><br /><strong>Tabela</strong> - coleção de registros ou linhas<br /><br /><strong>Registro</strong> - coleção de campos ou colunas<br /><br /><strong>Campo</strong> - perção da tabela que armazena informações somente de um tipo<br /><br /><strong>Ordem</strong> - os registros são guardados na ordem em que são armazenados, mas o SQL não garante a ordem na recuperação. Precisa ser especificada explicitamente.<br /><br /><strong>Relação</strong> - Termo matemático para tabela. Existem outras formas de organizar dados diferentes de tabelas. Arquivos e diretórios é uma delas e orientação a objetos outra.<br />Uma tabela num banco de dados relacional parece com uma tabela no papel ou com uma planilha.<br /><br />Existem SGBDs modernos orientados a objetos.<br /><br /><strong>Conexão</strong> - cada usuário conecta somente a um único banco de dados por vez.<br /><br /><strong>Convenções</strong><br /><br />Nomes de bancos de dados, de tabelas e de campos devem ser escritos em minúsculas e palavras compostas com sublinhado as separando. Isto porque o PostgeSQL é case sensitivo.<br /><br />O SQL não é sensível ao caso, a não ser que os identificadores estejam escritos entre aspas duplas.<br /><br /><strong>MÁXIMO DE CAMPOS DE UMA TABELA</strong><br />Uma tabela pode conter no máximo de 250 a 1600 campos, dependendo do tipo de dados. Claro que jamais devemos usar uma tabela tão grande.<br /><br />Cada tabela deve conter informações somente sobre um único assunto.<br /><br />Ao tentar apagar uma tabela que não existe um erro é disparado. Para evitar isso:<br /><br />drop table if exists nometabela;<br /><br /><strong>Palavras Reservadas:</strong><br /><br />oid<br />tableoid<br />xmin<br />xmax<br />cmin<br />cmax<br />ctid<br /><br /></p>]]></description>
			<category>Introdução</category>
			<pubDate>Tue, 29 Aug 2017 21:52:07 -0300</pubDate>
		</item>
		<item>
			<title>FAQs de Bancos de Dados</title>
			<link>http://backup/portal/servidores/postgresql/introducao-ao-postgresql/faqs-de-bancos-de-dados.html</link>
			<guid isPermaLink="true">http://backup/portal/servidores/postgresql/introducao-ao-postgresql/faqs-de-bancos-de-dados.html</guid>
			<description><![CDATA[<h4 style="text-align: justify;">Database FAQs</h4>

<p style="text-align: justify;">O que é um banco de dados? <br />O que é um banco de dados relacional? <br />O que é uma lima plana? <br />O que é SQL? <br />O que é um banco de dados transacionais? <br />O que é um procedimento armazenado? <br />O que é um banco de dados acionar? <br />O que é a replicação de dados? <br />O que é um dicionário de dados? <br />O que é o banco de dados normalização? <br />O que é um BLOB? <br />O que é software livre banco de dados? <br />O que é ODBC? <br />O que é um DSN? <br />Onde posso obter um driver ODBC manager? <br />Onde posso obter um driver ODBC? <br />Onde posso obter um driver ODBC MySQL? <br />Onde posso obter um driver ODBC Oracle? <br />O que é JDBC? <br />Quais são as bases de dados Java? <br />O que é um armazém de dados? <br />O que é a mineração de dados? <br />O que é a gestão dos dados? <br />O que é um banco de dados multimídia? <br /><br /><a href="http://www.tech-faq.com/lang/pt/database.shtml&amp;usg=ALkJrhhJgATlV9zW_BYqDU9bRQySuDafFw">http://www.tech-faq.com/lang/pt/database.shtml&amp;usg=ALkJrhhJgATlV9zW_BYqDU9bRQySuDafFw</a>  <br /><strong>Obs.</strong>: este conteúdo não mais é encontrado no site acima, por conta disso o mantenho aqui.<br /><br /><strong>O que é um Banco de Dados?</strong> <br />Um dos termos tecnologia que a maioria das pessoas se acostumaram a ouvir, quer no trabalho ou ao mesmo tempo a navegar na Internet é o banco de dados. A base de dados a ser utilizada uma técnica extremamente prazo, porém com o surgimento de sistemas de computadores e de tecnologia da informação em toda a nossa cultura, a base de dados tornou-se um agregado familiar prazo. <br /><br />A definição de uma base de dados é uma colecção de registos estruturados ou dados que são armazenados em um sistema de computador. Para que um banco de dados para ser verdadeiramente funcional, não deve apenas armazenar grandes quantidades de registros bem, mas ser acessadas com facilidade. Além disso, novas informações e mudanças também devem ser bastante fácil de entrada. A fim de ter um sistema de base de dados altamente eficiente, é necessário incorporar um programa que gere as consultas e as informações armazenadas no sistema. Isto é normalmente referido como SGBD ou de um Sistema de Gestão de Dados. Além destas características, que são criados todos os bancos de dados deve ser construído com alta integridade dos dados ea capacidade de recuperar os dados se hardware falhar. <br /><br /><strong>Tipos de Bancos de dados</strong> <br />Existem vários tipos comuns de bancos de dados, cada tipo de base de dados tem o seu próprio modelo dados (como os dados são estruturados). Eles incluem: Modelo Flat, modelo hierárquico, modelo relacional e Rede Modelo. <br /><br /><strong>O apartamento modelo de dados</strong> <br />Em um apartamento modelo banco de dados, existe uma bidimensional (plana estrutura) array de dados. Por exemplo, há uma coluna de informações e dentro desta coluna presume-se que cada item serão dados relacionados com os outros. Por exemplo, um apartamento modelo de dados inclui apenas o código postal. Dentro do banco de dados, haverá apenas uma coluna e cada nova linha dentro de uma coluna que será um novo CEP. <br /><br /><strong>O modelo hierárquico de dados</strong> <br />O modelo hierárquico de dados assemelha uma árvore como estrutura, tais como Microsoft Windows forma como organiza pastas e arquivos. Em um modelo hierárquico banco de dados, cada ligação ascendente está aninhada, a fim de manter os dados organizados em uma ordem específica em um mesmo nível lista. Por exemplo, um banco de dados de vendas hierarchal, maio lista cada dia de vendas como um processo separado. Dentro deste arquivo estão todos encaixados das vendas (mesmos tipos de dados) para o dia. <br /><br /><strong>O modelo de rede</strong> <br />Em um modelo de rede, que é a característica que define um registro é armazenado em um link para outros registros - em efeito rede. Estas redes (ou por vezes referido como ponteiros) pode ser uma variedade de diferentes tipos de informações, tais como números de nó ou até mesmo um disco endereço. <br /><br /><strong>O modelo relacional</strong> <br />O modelo relacional é o mais popular tipo de banco de dados e uma ferramenta extremamente poderosa, não só para armazenar informações, mas para acessá-lo também. Bancos de dados relacionais são organizadas as tabelas. A beleza de uma mesa é a de que a informação pode ser acessada ou adicionados sem reorganizar as tabelas. Uma tabela pode ter muitos registros e cada registro pode ter muitos domínios. <br /><br />Os quadros são muitas vezes chamado de relação. Por exemplo, uma empresa pode ter um banco de dados chamado encomendas dos clientes, dentro desta base de dados será várias tabelas ou relações relativos a todas as encomendas dos clientes. Os quadros podem incluir informação sobre os clientes (nome, morada, contactos, informações, o cliente número, etc) e de outras tabelas (relações), tais como ordens que o cliente comprou anteriormente (isto pode incluir o item de número, item descrição, quantidade pagamento, método de pagamento, etc ). Note-se que cada registro (grupo de campos) em um banco de dados relacional tem a sua própria chave primária. Uma chave primária é a única área que facilita a identificação de um registro. <br /><br />Bancos de dados relacionais usar um programa chamado interface SQL ou Standard Query Language. SQL é actualmente utilizado em praticamente todos os bancos de dados relacionais. Bancos de dados relacionais são extremamente fácil de personalizar a caber quase qualquer tipo de armazenamento de dados. Você pode facilmente criar relações de itens que você vende, os empregados que trabalham para a sua empresa, etc <br /><br /><strong>Acessando informações utilizando um banco de dados</strong> <br />Enquanto armazenamento de dados é uma grande característica das bases de dados, para muitos usuários de dados a característica mais importante é rápido e simples recuperação da informação. Em uma base de dados relacional, que é extremamente fácil de puxar os esclarecimentos relativos a um empregado, bancos de dados relacionais, mas também acrescentar o poder de executar consultas. Consultas são pedidos para puxar tipos específicos de informação e mostrar-lhes, quer no seu estado natural ou criar um relatório utilizando os dados. Por exemplo, se você tivesse um banco de dados de empregados e que incluiu tabelas salariais e de trabalho, como a descrição, você pode facilmente executar uma consulta de empregos que pagam mais de uma determinada quantia. Não importa qual é o tipo de informação que guarda no seu banco de dados, consultas podem ser criados usando SQL para ajudar a responder perguntas importantes. <br /><br /><strong>Conservação de um Banco de Dados</strong> <br />Bancos de dados podem ser muito pequenas (menos de 1 MB) ou extremamente grandes e complexos (como em muitos terabytes governo bases de dados), porém todos os bancos de dados são normalmente armazenados e localizados no disco rígido ou outros tipos de dispositivos de armazenamento e são acessadas via computador. Grandes bases de dados podem exigir servidores separados e locais, no entanto muitas pequenas bases de dados pode caber facilmente como arquivos localizados no disco rígido do seu computador. <br /><br /><strong>Garantir um Banco de Dados</strong> <br />Obviamente, muitas bases de dados confidenciais e armazenar informações importantes que não devem ser facilmente acessado apenas por alguém. Muitas bases de dados exigem senhas e outros recursos de segurança, a fim de aceder à informação. Embora alguns dados podem ser acessados através da Internet através de uma rede, outras bases de dados são sistemas fechados e só pode ser acessado no local. <br /><br /><strong>O que é um banco de dados relacional?</strong> <br />Um banco de dados relacional armazena dados em tabelas separadas em vez de colocar todos os dados em uma grande mesa. <br /><br />Um banco de dados relacional permite então do administrador do banco de dados (DBA's) para definir as relações entre essas tabelas. <br />Estas relações permitem DBA's para combinar dados de várias tabelas de consulta e de apresentação de relatórios. <br />Isso é realizado através da utilização de chaves, que são campos de dados utilizada para o identificar registros em uma tabela específica. <br />Banco de dados relacional tecnologia permite bases de dados para ser maior, mais rápido e mais eficiente. <br /><br />O conceito de um banco de dados relacional foi inicialmente desenvolvido pelo Dr. F. Edger (Ted) Codd em um Modelo Relacional de Dados para Grandes Bancos de dados partilhada, em 1970. <br /><br />Dr. Codd definiu treze normas que devem ser satisfeitas antes de uma base de dados pode ser considerado como um banco de dados relacional: <br />0. Um SGBD relacional deve ser capaz de gerir bases de dados relacionais inteiramente através das suas capacidades. <br />1. Informações regra - Todas as informações em um banco de dados relacional (incluindo nomes tabela e coluna) é representado explicitamente como valores nas tabelas. <br />2. O acesso garantido - Cada valor em um banco de dados relacional é garantida a ser acessível por meio de uma combinação do nome da tabela, chave primária valor, e coluna de nome. <br />3. Sistemática valor nulo apoio - O SGBD fornece apoio sistemático para o tratamento de valores nulos (desconhecido ou inaplicável dados), distinta dos valores padrão, e independente de qualquer domínio. <br />4. Ativo, relacionais catálogo on-line - A descrição da base de dados eo seu conteúdo é representada no nível lógico como quadros e pode, portanto, ser consultada a base de dados usando linguagem. <br />5. Dados abrangentes sublanguage - Pelo menos uma língua deve ter apoiado uma sintaxe bem definida e ser abrangente. Deve apoiar dados definição, manipulação, a integridade regras de autorização, e as transacções. <br />6. Ver actualização regra - Todas as opiniões que são teoricamente actualizada pode ser atualizado através do sistema. <br />7. Ajuste de nível de inserção, atualização e cancelamento - O SGBD não só apoia setlevel recuperações, mas também definir a nível de inserções, atualizações e exclusões. <br />8. Dados físicos independência - programas de aplicação e programas ad hoc são logicamente inalterados quando o acesso físico métodos ou estruturas de armazenagem são alteradas. <br />9. Lógico dados independência - programas de aplicação e programas ad hoc são logicamente inalteradas, na medida do possível, quando forem efectuadas alterações ao quadro estruturas. <br />10. Integridade independência - A base de dados língua deve ser capaz de definir regras integridade. Eles devem ser armazenados no catálogo on-line, e eles não podem ser contornados. <br />11. Distribuição independência - Aplicação programas ad hoc e os pedidos são logicamente inalterados quando os dados são distribuídos primeiro ou quando é redistribuído. <br />12. Nonsubversion - não deve ser possível para contornar as regras definidas através da integridade do banco de dados usando a linguagem de nível mais baixo línguas. <br />Alternativas para o banco de dados relacional modelo incluem o modelo hierárquicas, o modelo de rede, e ao objeto modelo. <br /><br /><strong>O que é um Flat File?</strong><br />Um computador, na sua definição mais simplificada, é nada mais que um dispositivo que armazena, processos, comunica, e manipula dados. Os dados estão no cerne de cada programa de computador, cada site, e ainda todos os vídeo games. <br /><br />O computador tem revolucionou a vida moderna, permitindo um nível de velocidade e precisão para tratamento da informação que até ao momento nunca foi possível. Computadores conseguir isto, pura e simplesmente a seguir um conjunto de instruções denominado código. <br /><br />Um flat arquivo é um documento estático, planilha eletrônica, ou textual registro que contém dados que normalmente não é estruturalmente relacionadas. Flat arquivos são chamados assim porque há pouco que pode ser feito com as informações neles contidas, com excepção ler, armazenar, e de envio. <br /><br />Flat arquivos são tipicamente conjuntos de dados básicos que são utilizados para a configuração de armazenamento de dados para aplicações e programas. A média computador usuário não irá normalmente vê-los muito. Não há lista de endereços básicos-como exemplos de um flat arquivo que pode ser usado, mas os usuários modernos tipicamente um desejo mais robusto e sofisticado método de chamar a sua informação do que a confiar na capacidade limitada de uma estrutura plana arquivo.<br /> <br />Flat arquivos são comumente usadas por encontrada na base de dados e sistemas de gestão, normalmente pertencentes a lima plana e organizados em bases de dados. Um arquivo de dados é realmente plana nada mais do que uma organização critério atribuído a uma amostra conjunto de arquivos plana. <br /><br />Programadores provavelmente usar arquivos plana e plana arquivo de dados muito mais freqüência do que a média de computador quando construir aplicações em sistemas de gerenciamento de banco de dados como o MySQL, um popular DBS que suporta múltiplas linguagens de programação. <br /><br />Flat arquivos também são comumente utilizados pelos desenvolvedores site para utilização no interior eles utilizam linguagens como PHP ou ASP. <br />Verificou-se que fixa ficheiros, uma vez que são simples arquivos de dados, ocupam muito menos espaço do que arquivos estruturados. No entanto, o utilitário leitura plana arquivos devem ser bastante sofisticado, na medida em que terá de saber o que fazer com o arquivo plana depois de ter sido acessado. <br /><br /><br /><strong>O que é SQL?</strong> <br />SQL (Structured Query Language) é a língua mais comum usada para acessar padronizado bases de dados. <br /><br />O SQL foi originalmente desenvolvido pela IBM na década de 1970 para a sua DB2 RDBMS. <br />SQL versão 3 é oficialmente definida pela American National Standards Instititute (ANSI) em ANSI SQL: 1999 standard. <br />A maior parte dos SGBD's existentes atualmente estão em conformidade com a norma anterior ANSI SQL92. <br />SQL é uma linguagem nonprocedural. Oracle processuais produz uma versão do SQL que designa PL / SQL. <br />SQL é suportado por todas as grandes sistema de base de dados em uso hoje em dia, incluindo o MySQL, PostgreSQL, Berkeley DB, Oracle, DB2, Sybase, Informix, e Microsoft SQL. <br />SQL é muitas vezes pronunciado "sequela". <br /><br /><strong>O que é um banco de dados transacionais?</strong> <br />Um banco de dados transacionais é um SGBD onde escrever sobre operações do banco de dados são capazes de ser retirada caso não sejam preenchidos corretamente. <br /><br />Se um sistema de base de dados transacionais perde energia elétrica a meio caminho através de uma operação, parcialmente concluída a operação irá ser retirada e banco de dados será restaurado para o estado em que foi iniciada antes da operação. <br /><br />Imagine que um front-end aplicação está enviando um cliente para um sistema de base de dados. O front-end aplicação envia o pedido ao produto para o cliente e subtrair o produto a partir de inventário. O front-end de aplicação é de cerca de enviar o pedido para a criação de uma factura para o cliente e, de repente o front-end aplicação travamentos. <br /><br />Um banco de dados transacionais pode então voltar a operação concluída parcialmente. <br />Uma alternativa para usar um banco de dados transacionais é a utilização operações atômicas. <br /><br /><strong>O que é um procedimento armazenado?</strong> <br />Uma stored procedure é um conjunto de comandos SQL que tem sido compilados e armazenados no servidor de banco de dados. <br /><br />Depois que o processo tenha sido armazenado "armazenadas", aplicações cliente pode executar o procedimento armazenado, uma e outra vez sem enviá-lo ao servidor de banco de dados novamente, e sem a compilá-lo novamente. <br />Procedimentos armazenados melhorar o desempenho, reduzindo o tráfego de rede e CPU load. <br /><br /><br /><strong>O que é um banco de dados acionar?</strong> <br />Uma base de dados é desencadear um procedimento armazenado que é invocado automaticamente quando um evento ocorre predefinidos. <br />Database triggers permitir DBA's (base de dados Administradores) para criar outros relacionamentos entre distintas bases de dados. <br />Por exemplo, a modificação de um registro em um banco de dados podem acionar a modificação de um registro em uma segunda base de dados. <br /><br /><strong>O que é a replicação de dados?</strong> <br />Replicação de dados é a criação e manutenção de várias cópias da mesma base de dados. <br /><br />Na maioria das implementações replicação de dados, mantém um banco de dados do servidor master cópia do banco de dados e servidores de banco de dados adicionais slave manter cópias da base de dados. <br /><br />Escreve dados são enviados para o servidor e banco de dados master são então replicada pelo escravo servidores de banco de dados. <br />Database lê são divididas entre todos os servidores de base de dados, o que resulta em uma grande vantagem desempenho devido a partilha de carga. <br /><br /><strong>O que é um dicionário de dados?</strong> <br />Um dicionário de dados é reservado um espaço dentro de uma base de dados que é usado para armazenar informações sobre a base de dados própria. <br /><br />Um dicionário de dados podem conter informações como: <br />Database design informação <br />SQL procedimentos armazenados <br />Usuário permissões <br />Usuário estatísticas <br />Database processar informação <br />Dados estatísticos do crescimento <br />Dados estatísticos desempenho <br /><br /><strong>O que é o banco de dados normalização?</strong> <br />Database normalização é o processo de organização de dados em conjuntos distintos e exclusivos. <br />Os efeitos de normalização são os seguintes: <br />Reduzir ou eliminar a duplicação de armazenamento de dados <br />Organize os dados em uma estrutura lógica e eficaz <br />O processo de normalização envolve determinar quais dados devem ser armazenados em banco de dados cada tabela. <br />Por tradição, o processo de normalização através do trabalho envolve etapas bem definidas, chamadas formas normais. <br /><br />Na Primeira forma normal (1NF) você eliminar a duplicação de colunas da mesma tabela, criar quadros separados para cada grupo de dados relacionados, e identificará cada linha com uma única coluna ou conjunto de colunas (as chaves primárias). <br /><br />Na Segunda forma normal (2NF) você remover subconjuntos de dados que se aplicam a várias linhas de uma tabela, colocá-los em quadros separados, e criam relações entre estes novos quadros e os quadros originais através da utilização de chaves estrangeiras. <br />Na Terceira forma normal (3NF) você remover colunas que não estão dependentes da chave primária. <br />Adicional formas normais foram definidos, mas geralmente são menos utilizados. Estes incluem formas avançadas normal Quarta Forma Normal (4NF), Quinta Forma Normal (5NF), Boyce Codd Normal Form (BCNF), e Domain-Key Normal Form (DK / NF). <br /><br /><strong>O que é um BLOB?</strong> <br />Um BLOB (Binary Large Object) é um grande pedaço de dados que são armazenados em um banco de dados. <br /><br />Um BLOB difere de dados no banco de dados regulares que não é forçada em uma determinada estrutura. Um campo de dados normais poderia ser estruturado para ser 14 caracteres e apenas aceitar letras minúsculas. Um campo BLOB não é normalmente restrito no tipo de conteúdo e de conteúdo podem ser vários gigabytes de tamanho. Normal campos de dados espaciais têm afectado por eles, eles são utilizados ou não. BLOB campos são apenas atribuídos espaço quando são utilizados. <br />BLOB campos são normalmente utilizados para armazenar gráficos, áudio, vídeo ou documentos. <br /><br />BLOB campos podem ser adicionados, mudou, e excluído. No entanto, eles não podem ser pesquisados e manipulados com banco de dados padrão comandos. <br /><br /><strong>O que é software livre banco de dados?</strong> <br />MySQL<br />O MySQL banco de dados é mais popular do mundo banco de dados open-source. Mais de seis milhões de instalações usar o banco de dados MySQL a potência de alto volume e de outros web sites sistemas de missão crítica das empresas-incluindo líderes da indústria como NASA, Yahoo, The Associated Press (AP), Suzuki, e Sabre Holdings. <br /><br />MySQL é uma alternativa atraente ao alto custo, mais complexa base tecnológica. O premiado a sua fiabilidade, escalabilidade e velocidade tornam a escolha certa para uma ampla gama de serviços TI corporativos, desenvolvedores web e vendedores de software. <br />MySQL oferece várias vantagens-chave: <br /><br />Confiabilidade e desempenho. MySQL AB faz todas as versões iniciais da sua base de dados disponível para o servidor software de fonte aberta para a comunidade a fim de permitir vários meses de "batalha teste" antes que eles considerem prontos para uso em produção. <br /><br />Facilidade de uso e instalação. O MySQL arquitetura torna extremamente rápido e simples para personalizar. A única multi-motor de arquitetura de armazenamento corporativo MySQL dá a flexibilidade de que necessitam os clientes com um SGBD incomparável na estabilidade, velocidade, compacidade, e facilidade de implantação. <br />Liberdade de Plataforma Lock-in. Ao proporcionar pronto acesso ao código-fonte, a abordagem do MySQL AB garante liberdade, impedindo assim lock-nos a um único fornecedor ou plataforma. <br />Suporte multi-plataforma. MySQL está disponível em mais de vinte diferentes plataformas, incluindo todas as principais distribuições Linux, Unix, Microsoft Windows e Mac OS X. <br />Milhões de desenvolvedores treinados e certificados. MySQL é mais popular do mundo open source banco de dados. Isso faz com que seja fácil de encontrar e knowledgable DBA's e desenvolvedores experientes. <br /><br /><strong>PostgreSQL</strong> <br />PostgreSQL é extremamente escalável, SQL compliant, open-Fonte SGBD objeto-relacional. Com mais de 15 anos de desenvolvimento histórico, PostgreSQL está rapidamente se tornando a base de dados para empresa de facto nível soluções de fonte aberta. <br /><br />PostgreSQL é um objeto-sistema de gerenciamento de banco de dados relacional (ORDBMS) com base em postgres, versão 4,2, desenvolvido na Universidade da Califórnia em Berkeley Computer Science Department. Postgres foi pioneira em muitos conceitos que só ficou disponível em sistemas de comunicações de dados muito mais tarde. <br />PostgreSQL é um descendente de fonte aberta do presente código original Berkeley. Suporta SQL92 e SQL99 e oferece muitas características modernas: <br />Complexo queries <br />Chaves estrangeiras <br />Aciona <br />Exibições <br />Transacional integridade <br />Multiversion concurrency controle <br /><br /><strong>BerkeleyDB</strong> <br />Berkeley DB é uma das mais amplamente utilizada desenvolvedor bases de dados em todo o mundo, é de código aberto e roda em todos os principais sistemas operacionais, incluindo Linux embutido, Linux, Unix, Microsoft Windows, Mac OS X, VxWorks e QNX. <br /><br />Berkeley DB fornece os dados básicos de gestão funcionalidade, escalabilidade, potência e flexibilidade da empresa bancos de dados relacionais, mas sem o overhead de uma consulta camada de transformação. Combinado com a estabilidade e menor custo de suporte de código fonte aberto, Berkeley DB oferece muitas vantagens, incluindo: <br /><br />Administração custo zero elimina a necessidade de um DBA <br />Dimensões menores (menos de 500 KB) <br />A simplicidade de integração em um aplicativo <br />Mais velocidade e melhor desempenho <br />Menor complexidade e mais confiabilidade <br /><br /><br /><strong>Firebird</strong> <br />Firebird é um banco de dados relacional com muitos recursos ANSI SQL-99 que roda em Windows, Linux e uma variedade de plataformas Unix. Firebird oferece excelente concurrency, de alta performance, poderoso e idioma de suporte para database triggers e procedimentos armazenados. Firebird tem sido utilizado em sistemas de produção, ao abrigo de uma variedade de nomes, desde 1981. <br /><br />Firebird é um projeto comercialmente independente de C / C + + programadores, assessores técnicos e suporte desenvolvendo e melhorando um banco de dados relacional multi-plataforma do sistema de gestão baseado no código fonte liberado pela Borland Software Corp sobre July25th, 2000 sob o InterBase Public License. <br />Firebird é completamente livre de qualquer registro, licenciamento ou implantação taxas. Firebird podem ser implantados livremente para uso com qualquer software de terceiros, independentemente de serem ou não comerciais. <br /><br /><strong>O que é ODBC?</strong> <br />ODBC (Open Data Base Connectivity) é uma função que proporciona uma biblioteca comum API (Application Programming Interface) para sistemas de gerenciamento de banco de dados ODBC compatíveis. <br /><br />ODBC SQL foi desenvolvido pelo Grupo de Acesso 1992. <br />ODBC funciona como um padrão de "shim" entre as aplicações que utilizam bases de dados e as bases de dados próprios. <br />Se um pedido for desenvolvido usando ODBC, o pedido será capaz de armazenar dados em qualquer sistema de gerenciamento de banco de dados que está equipado com um driver ODBC. <br /><br />Drivers ODBC são muitas vezes desenvolvidas em sub-componentes: <br />Um driver ODBC Manager <br />ODBC Drivers <br />O pedido alega ODBC chamadas para o driver ODBC gerente. <br />O gerente escolhe o driver ODBC driver ODBC apropriado, que carrega condutor, ler ou escrever e enviar os pedidos que utilizam condutor. <br />Os processos ODBC driver ODBC a função exige, sustenta a solicitar ao banco de dados SQL, e retorna os resultados para a aplicação. <br /><br /><strong>O que é um DSN?</strong> <br />Uma DSN (Data Source Name) é um identificador que define uma fonte de dados para um driver ODBC. <br />Um DSN consiste de informações, tais como: <br />Database nome <br />Diretório <br />Database condutor <br />ID do usuário <br />Senha <br />Sob Unix, DSN configuração é geralmente armazenada em / etc / odbc.ini. <br />Ao abrigo do Microsoft Windows, DSN configuração é normalmente armazenado no registro, embora possa também ser armazenados em arquivos de configuração em um arquivo. DSN extensão. <br /><br /><strong>Onde posso obter um driver ODBC manager?</strong> <br />Os dois principais gestores driver ODBC para Unix são iODBC e unixODBC. <br /><br />iODBC (Independent Open DataBase Connectivity) é uma plataforma independente Open Source execução de ambos os ODBC e X / Open caderno de encargos. iODBC proporciona tanto um gerente e um driver ODBC SDK que facilita o desenvolvimento da base de dados independente de aplicativos. iODBC inclui uma administração baseada em GTK a ferramenta. <br /><br />iODBC tem sido portado para diversas plataformas, incluindo: Linux (x86, Itanium, Alpha, Mips, e StrongArm), Solaris (Sparc e X86), AIX, HP-UX (PA-RISC e Itanium), Digital UNIX, Dynix, Generic 5,4 UNIX, FreeBSD, MacOS 9, MacOS X, DG-UX e OpenVMS. <br /><br />unixODBC prevê Unix com as mesmas aplicações ODBC 3,51 API e instalações disponíveis ao abrigo do Windows. unixODBC Manager fornece um driver que suporta a totalidade do ODBC e executa a API ODBC ODBC 3 a 2 com traduções para UNICODE ANSI conversão. unixODBC também inclui um conjunto de utilitários gráficos que permitem aos usuários especificar conexões para DBMSes para ser utilizado por aplicações, uma coleção de drivers ODBC, incluindo um texto simples baseado condutor, um NNTP condutor, um motorista Postgres e outros, e uma selecção de modelos e bibliotecas que a ajuda na construção de drivers ODBC. unixODBC funciona com o MySQL, Postgres, StarOffice / OpenOffice, Applixware, iHTML, PHP, Perl DBD:: ODBC, e muitas outras aplicações e motoristas. Connection pooling também é fornecida para aumentar a performance em aplicações como o PHP. unixODBC QT inclui uma base de administração GUI. <br /><br /><strong>Onde posso encontrar um driver ODBC MySQL?</strong> <br />MySQL Connector / ODBC está o funcionário MySQL ODBC driver. <br />OpenLink Software oferece tanto Single-Tier e Multi-Tier MySQL ODBC drivers. <br /><br /><strong>Onde posso obter um driver ODBC Oracle?</strong> <br />A Oracle ODBC Drivers Dowload Page é a fonte oficial Oracle para os drivers ODBC. <br /><br />A Easysoft ODBC Driver Oracle melhora na bolsa Oracle ODBC motoristas, prevendo um melhor desempenho e mais fácil manutenção. <br />OpenLink Software oferece tanto Single-Tier e Multi-Tier Oracle ODBC drivers. <br /><br />DataDirect Connect para ODBC é uma substituição Oracle ODBC driver que oferece melhor desempenho e mais fácil manutenção. <br />Attunity fornece uma base de dados que inclui um adaptador Oracle ODBC driver. <br /><br /><br /><strong>O que é JDBC?</strong> <br />JDBC (Java Data Base Connectivity) é uma API (Application Programming Interface) para a ligação a bases de dados a partir do ambiente Java. <br /><br />JDBC é uma alternativa ao ODBC. JDBC da interface Java é mais confortável do que para programadores Java da linguagem C ODBC interface. <br />JDBC é incluído em ambas as J2SE e J2EE. <br />Se nenhum driver JDBC está disponível para as suas necessidades, uma ponte JDBC-ODBC pode ser usado para se conectar a um driver ODBC através do JDBC API. Java 2 inclui uma ponte JDBC-ODBC para Microsoft Windows e Solaris. <br /><br /><strong>Quais são as bases de dados Java?</strong> <br />HSQLDB <br />HSQLDB é o principal mecanismo de banco de dados relacional SQL escrito em Java. HSQLDB tem um driver JDBC e suporta um subconjunto dos ricos ANSI-92 SQL (formato árvore BNF), acrescido SQL 99 e 2003 acessórios. HSQLDB oferece um pequeno (menos de 100k, em uma versão), fast motor de banco de dados que oferece tanto na memória e disco-com base em tabelas. Embutidos e servidor modos estão disponíveis. Além disso, inclui ferramentas como um servidor web mínimo, em memória de consulta e instrumentos de gestão (pode ser executado como applets) e uma série de exemplos demonstração. <br /><br />O produto está sendo usada como uma base de dados e persistência motor Open Source Software, em muitos projetos e até mesmo em projectos comerciais e de produtos. Na versão atual é que é extremamente estável e fiável. HSQLDB é conhecida por seu pequeno tamanho, a capacidade de executar completamente na memória ea sua velocidade. <br />Esta característica-embalada software é totalmente gratuito sob nossas licenças, com base na norma licença BSD. Sim, isso mesmo, completamente livre de custos ou restrições onerosas e totalmente compatível com todas as principais licenças de código-fonte aberto. Java código fonte e documentação extensiva sempre incluído. <br /><br /><strong>Berkeley DB Java Edition</strong> <br />JE Berkeley DB é um desempenho elevado, mecanismo de armazenamento transacional totalmente escrito em Java. Tal como o Berkeley DB produto altamente bem sucedido, Berkeley DB JE executa no endereço espaço da candidatura, sem o overhead de cliente / servidor comunicação. Ele armazena dados na aplicação do formato nativo, de forma nenhuma tradução runtime dados é necessária. JE Berkeley DB suporta transações ACID completo e valorização. Ele fornece uma maneira fácil de utilizar interface, que permite aos programadores armazenar e recuperar informação rápida, simples e fiável. <br /><br />Berkeley DB JE foi desenvolvido desde o início em Java. Ela tira o máximo partido do ambiente Java. O Berkeley DB API JE fornece uma interface Java Coleções de estilo, assim como uma interface programática semelhante à da Berkeley DB API. A arquitetura do Berkeley DB JE apoia alto desempenho e para os dois concorrentes de grande intensidade de ler e escrever com uso intensivo de cargas de trabalho. <br /><br />JE Berkeley DB é diferente de todas as outras bases de dados Java disponível hoje. JE Berkeley DB não é um motor relacional construído em Java. É um estilo embutido Berkeley DB-loja, com uma interface concebido para programadores, e não DBAs. JE da arquitectura do Berkeley DB emprega um registro de base, nenhum sistema de armazenamento de sobrescrever, permitindo concurrency alta velocidade e ao mesmo tempo que fornece transações ACID e registro de nível de bloqueio. Berkeley DB JE caches mais comumente usado de forma eficiente os dados na memória, sem exceder aplicação de limites especificados. Desta forma Berkeley DB JE trabalha com um pedido para utilizar recursos disponíveis JVM mesmo tempo que proporciona o acesso a muito grandes conjuntos de dados. <br /><br />O Berkeley DB JE arquitetura fornece uma camada subjacente de armazenamento para qualquer aplicação Java que exigem alto desempenho, integridade transacional e valorização. <br /><br /><strong>IBM Cloudscape</strong> <br />IBM Cloudscape é um puro, de código aberto baseado em Java sistema de gerenciamento de banco de dados relacional que pode ser embutido em Java e programas utilizados para a operação de transformação on-line (OLTP). Um independente de plataforma, pequeno-pegada (2MB) base de dados, Cloudscape integra estreitamente com qualquer solução baseada em Java. <br /><br /><strong>O que é um Data Warehouse?</strong> <br />Um armazém de dados é um lugar onde os dados são armazenados para fins de arquivo, de análise e de fins de segurança fins. Normalmente um armazém de dados é tanto um único computador ou vários computadores (servidores) amarrados juntos para criar um gigantesco sistema informático. <br /><br />Os dados podem consistir de dados brutos ou dados e pode ser formatado em vários tipos de tópicos, incluindo um de vendas da organização, salários, dados operacionais, incluindo dados de resumos de relatórios, cópias dos dados, os dados dos recursos humanos, inventário de dados, para fornecer dados externos e simulações análise, etc <br />Além de ser uma casa para armazenar grandes quantidades de dados, eles devem possuir sistemas em vigor que tornam mais fácil o acesso a dados e utilizá-lo no dia-a-dia das operações. Um armazém de dados é, por vezes, disse a ser uma parte importante em um sistema de apoio à decisão. Um caminho para uma organização de utilizar os dados a apresentar factos, tendências ou relações que possam ajudá-los a tomar decisões efetivas ou criar estratégias eficazes para realizar seus objetivos. <br />Há muitos modelos diferentes de dados incluindo Online Transaction Processing armazéns que é um armazém construído para a velocidade e facilidade de uso. Outro tipo de armazém de dados é chamado Online Analytical Processing, este tipo de armazém é mais difícil de usar e acrescenta mais um passo no âmbito da análise dos dados. Normalmente ela exige mais passos que atrasa o processo para baixo e muito mais dados, a fim de analisar determinadas questões.<br /><br />Além deste modelo, um dos mais comuns armazém de dados modelos incluem um armazém de dados que está sujeito orientado, variante tempo, não volátil e integrada. Assunto orientado significa que os dados estão ligados entre si e é organizado pelas relações. <br /><br />Tempo variante que significa que todos os dados que forem alterados no armazém de dados pode ser monitorado. Normalmente todas as alterações aos dados estão carimbados com data e uma hora antes e depois com um valor, de modo que você possa mostrar as mudanças através de um período de tempo. <br /><br />Não volátil significa que os dados nunca é excluída ou apagadas. Esta é uma ótima maneira de proteger seus dados mais cruciais. Como esses dados são retidos, você pode continuar a usá-lo em uma posterior análise. Por último, os dados são integrados, o que significa que um armazém de dados que utiliza os dados organizacionais é amplo, em vez de apenas a partir de um departamento. <br /><br />Além do termo armazém de dados, um termo que freqüentemente é utilizada é uma dados Mart, dados marts são menores e menos integrados dados cárteres. Eles poderiam ser apenas um banco de dados sobre recursos humanos registros ou dados sobre as vendas apenas uma divisão. <br /><br />Com a melhoria das tecnologias, bem como as inovações na utilização de técnicas data warehousing, armazéns foram alterados a partir de dados off-line Operacional Bancos de dados on-line para incluir um armazém de dados integrada. <br /><br />Offline dados operacionais Armazéns armazéns onde os dados são dados normalmente é copiado e colado em tempo real a partir de dados em redes um sistema off-line onde pode ser utilizado. Normalmente é a mais simples e menos técnico tipo de armazém de dados. <br /><br />Os dados são dados off-line Armazéns armazéns que são atualizados com freqüência, quer diárias, semanais ou mensais e que os dados estão armazenados em uma estrutura integrada, em que outros possam acessá-lo e executar relatórios. <br /><br />Tempo Real Dados Armazéns armazéns onde são dados que é atualizado a cada momento o afluxo de novos dados. Por exemplo, um Real Time Data Warehouse possa incorporar dados de um Ponto de Venda sistema e é atualizado a cada venda que é feita. <br /><br />Integrado de Dados Armazéns armazéns são dados que podem ser utilizados para outros sistemas de acesso a eles para os sistemas operacionais. Alguns dados integrados Armazéns são utilizados por outros dados armazéns, permitindo-lhes o acesso a eles relatórios de processos, bem como verificar a dados actuais. <br />Então, por que você ou sua organização deve utilizar um Data Warehouse? Aqui estão alguns dos prós e contras da utilização deste tipo de estrutura de dados. <br />O número um motivo pelo qual você deve implementar um armazém de dados é de tal modo que os trabalhadores e os usuários finais podem acessar o armazém de dados e utilizar os dados para a elaboração de relatórios, análises e tomada de decisão. Utilizando os dados em um armazém pode ajudá-lo a localizar as tendências, incidem sobre relacionamentos e ajudá-lo a compreender mais sobre o ambiente que a sua empresa opera Pol. <br /><br />Dados armazéns também aumentar a consistência dos dados e lhe permite ser verificada ao longo e mais pertinentes para determinar o modo como ela é. Porque a maioria dos armazéns dados são integrados, pode puxar os dados de diversas áreas da sua empresa, por exemplo, recursos humanos, finanças, TI, contabilidade, etc <br />Enquanto há muitas razões pelas quais você deve ter um armazém de dados, deve notar-se que existem algumas desvantagens de ter um armazém de dados, incluindo o fato de que ela é morosa para criar e manter em funcionamento. <br /><br />Você também poderá ter um problema com os sistemas actuais a ser incompatível com os seus dados. Também é importante considerar futuros upgrades de software e equipamentos; estes também têm que ser compatíveis com você dados. <br /><br />Por último, a segurança pode ser uma enorme preocupação, especialmente se os seus dados são acessíveis através de uma rede aberta como a internet. Você não quer que seus dados sejam vistos por seu concorrente ou pior cortado e destruídos. <br /><br /><strong>O que é Data Mining?</strong> <br />Mineração de dados é normalmente definido como pesquisar, analisar e lidar com grandes quantidades de dados para encontrar relações, padrões, ou qualquer correlação estatística significativa. Com o advento dos computadores, as grandes bases de dados e de internet, é mais fácil do que nunca para coletar milhões, bilhões e até mesmo trilhões de pedaços de dados que pode então ser sistematicamente analisados para ajudar a olhar para os relacionamentos e de procurar soluções para problemas difíceis. Além usos governamentais, muitos comerciantes utilizar mineração de dados para encontrar fortes padrões de consumo e de relacionamentos. As grandes organizações e instituições educativas também dados mina para encontrar correlações significativas que podem melhorar a nossa sociedade. <br /><br />Embora a mineração de dados é amoral no facto de que só olha para a forte correlação estatística ou relacionamentos, ele pode ser usado para bons ou não tão bons propósitos. Por exemplo, muitas organizações governamentais dependem de mineração de dados para ajudá-los a criar soluções para muitos problemas sociais. Marqueteiros utilizar mineração de dados para ajudá-los a pino ponto e centrar a sua atenção em certos segmentos do mercado de vender a, e, em alguns casos, os hackers podem usar chapéu preto mineração de dados e de esquema fraudulento de roubar milhares de pessoas. <br /><br />Como a mineração de dados funciona? Pois bem a resposta mais simples é a de que grandes quantidades de dados sejam recolhidos. Normalmente mais entidades que realizam mineração de dados são grandes corporações e agências governamentais. Eles foram coleta de dados por décadas e que têm lotes de dados a filtrarem. Se você é um novo negócio bastante ou individuais, você pode comprar determinados tipos de dados, a fim de mina para seus próprios fins. Além disso, os dados também podem ser roubados por hackers a partir de grandes depositários hacking por seu caminho em um grande banco de dados ou simplesmente roubar laptops que estão mal protegidos. <br />Se você estiver interessado em um pequeno estudo de caso sobre o modo como mineração de dados são coletados, usados e fora de lucrou, você pode olhar para o seu supermercado local. O seu supermercado normalmente é extremamente magra e organizou uma entidade que assenta na mineração de dados para se certificar de que é rentável. Normalmente o seu supermercado emprega um POS (Point Of Sale) sistema que recolhe os dados de cada item que for adquirido. O sistema POS recolhe dados sobre o item nome de marca, categoria, tamanho, data e hora da compra e o preço pelo qual o item foi comprado em. Além disso, o supermercado tem normalmente um cliente recompensas programa, que também está na contribuição para o sistema POS. Esta informação pode ligar diretamente os produtos adquiridos com um indivíduo. Todos estes dados para cada compra feita durante anos e anos é armazenado em um banco de dados em um computador com o supermercado. <br /><br />Agora que você tem um banco de dados com milhões e milhões de campos de dados e registos aquilo que você vai fazer com ele? Pois bem, você dados mina-la. O conhecimento é poder e com tantos dados é possível detectar tendências, correlações estatística, relações e padrões que podem ajudar a sua empresa se tornar mais eficiente, eficaz e racionalizada. <br /><br />O supermercado já pode descobrir que comercializam a mais, que hora do dia, semana, mês ou ano é o mais activo, fazer aquilo que os consumidores compram produtos com certos itens. Por exemplo, se uma pessoa adquire o pão branco, o que seria outro item que estará inclinado a comprar? Geralmente nós podemos encontrar o seu amendoim e geléia. Há muito boa informação de que um supermercado pode usar apenas a mineração de dados dos seus próprios dados que tenham recolhido. <br /><br /><strong>O que é Gerenciamento de dados?</strong> <br />Gerenciamento de Dados é um amplo campo de estudo, mas basicamente é o processo de gerenciamento de dados como um recurso valioso para que seja uma organização ou empresa. Uma das maiores organizações que lidam com dados de gestão, Dama (Data Management Association), afirma que os dados de gestão é o processo de desenvolvimento de arquitecturas dados, práticas e procedimentos lidar com os dados e, em seguida, executar esses aspectos em uma base regular. <br /><br />São muitos os temas no âmbito da gestão dos dados, alguns dos temas mais populares incluem dados modelagem, data warehousing, dados circulação, administração de dados e mineração de dados. <br /><br /><strong>Modelagem de dados</strong> <br />Modelagem de dados é, primeiramente, criar uma estrutura para os dados que você coletar e utilizar esses dados e, em seguida, organizar de uma forma que seja facilmente acessível e eficiente para armazenar e puxar os dados para a elaboração de relatórios e análise. A fim de criar uma estrutura de dados, tem que ser chamada apropriadamente e mostrar uma relação com outros dados. Também deve caber adequadamente em uma classe. Por exemplo, se você tiver uma base de dados dos meios de comunicação social, você pode ter um hierarchal estrutura de objetos que incluem fotografias, vídeos e ficheiros de áudio. Dentro de cada categoria, você pode classificar objetos em conformidade. <br /><br /><strong>Data Warehousing</strong> <br />Data Warehousing é armazenar dados de maneira eficaz para que possa ser acessada e utilizada de forma eficiente. Diferentes organizações recolher diferentes tipos de dados, mas muitas organizações utilizam os seus dados da mesma forma, de modo a criar relatórios e analisar seus dados para fazer qualidade decisões de negócios. Data Warehousing é normalmente um vasto repositório de dados organizacionais, no entanto, por muito grandes corporações nos pode abranger apenas um escritório ou um departamento. <br /><br /><strong>Dados Movimento</strong> <br />Dados movimento é a capacidade de se mover dados de um local para outro. Por exemplo, os dados têm de ser transferido a partir de onde é recolhida a um banco de dados e, depois, para um usuário final, mas este processo demora um bocado de logística insight. Não só todos os hardwares, aplicações e dados recolhidos devem ser compatíveis com um outro, eles também devem poder ser classificados, armazenados e acessados com facilidade dentro de uma organização. Movendo dados pode ser muito caro e pode exigir lotes de recursos para se certificar de que os dados são movidos de forma eficiente, que os dados estão seguros no trânsito e que, uma vez que ele chegue ao usuário final que possa ser utilizado eficazmente, quer a ser impressa em papel como um relatório, salvou em um computador ou enviados como anexo de e-mail. </p>

<p style="text-align: justify;"><strong>Database Administration</strong> <br />Database administração é extremamente importante na gestão de dados. Cada organização ou empresa necessita de dados que são responsáveis pelos administradores do banco de dados ambientais. Administradores de dados são normalmente dada a autoridade para fazer as seguintes tarefas que incluem valorização, integridade, segurança, disponibilidade, performance e de desenvolvimento e teste apoio. <br /><br />Recuperabilidade é geralmente definida como uma maneira de armazenar dados como um back-up e, depois, voltar a testar novas empresas para se certificar de que eles são válidos. A tarefa de integridade significa que os dados que é puxado para determinados registros ou arquivos são, de facto, válidos e ter alta integridade dos dados. Integridade dos dados é extremamente importante especialmente quando da criação de relatórios ou quando os dados forem utilizados para a análise. Se você possui dados que são considerados inválidos, os seus resultados serão inúteis. <br /><br />Banco de dados de segurança é uma tarefa essencial para administradores de dados. Por exemplo, administradores de dados que têm a cargo do apuramento e dando acesso a certas bases de dados ou de árvores em uma organização. Outra tarefa importante é disponibilidade. Disponibilidade é definida como tendo a certeza de uma base de dados está instalado e funcionando. Quanto mais o tempo, normalmente o mais elevado nível de produtividade. Desempenho é relacionada à disponibilidade, considera-se tirar o máximo partido do hardware, aplicações e dados que possível. Desempenho é, normalmente, em relação a um orçamento organizações, equipamentos e recursos físicos.<br /><br />Por último, administrador um banco de dados é normalmente envolvidos no desenvolvimento e teste de dados apoio. Database administradores estão sempre a tentar empurrar o envelope, tentando obter mais fora de uso dos dados e adicionar um melhor desempenho e mais poderosas aplicações, hardware e recursos para estruturar a base de dados. Uma base de dados que é administrado corretamente não é apenas um sinal de administrador competente banco de dados, mas também significa que todos os usuários finais têm um enorme recurso a dados em que se encontra disponível. Isto torna mais fácil a criação de relatórios, análises e fazer comportamento de alta qualidade decisões baseadas em dados que são recolhidos e utilizados no seio da organização. <br /><br /><strong>Data Mining</strong> <br />Outro tema importante em matéria da gestão dos dados é mineração de dados. Mineração de dados é um processo em que grandes quantidades de dados são crivada através de mostrar tendências, relações e padrões. Mineração de dados é uma componente essencial à gestão de dados, uma vez que expõe informações interessantes sobre os dados estão sendo coletados. É importante notar que os dados são recolhidos principalmente para que ela possa ser utilizada para encontrar esses padrões, relações e tendências que podem ajudar a criar um negócio crescer ou lucro. <br />Embora haja muitos temas no âmbito da gestão dos dados, todos eles trabalham em conjunto desde o início quando os dados são recolhidos para o fim do processo em que é através do crivo; analisados e formatados onde especialistas podem então fazer decisões qualidade baseados no mesmo. <br /><br /><br /><strong>O que é um Multimedia Database?</strong> <br />Uma base de dados é uma base de dados multimédia que hospeda um ou mais tipos de arquivos de mídia primária como. Txt (documentos),. Jpg (imagens),. Swf (vídeos),. Mp3 (áudio), etc E vagamente se dividem em três categorias principais : <br /><br /><strong>Mídia estática (tempo-independente, ou seja, imagens e caligrafia)</strong> <br />Dynamic comunicação social (tempo-dependente, isto é, vídeo e som bytes) <br />Dimensional comunicação social (ou seja, jogos 3D ou assistida por computador elaboração de programas de CAD) <br />Todas as principais mídias são armazenados em arquivos binários seqüências de zeros e uns, e são codificados de acordo com o tipo de arquivo. <br />O termo "dados" é tipicamente referenciado a partir do computador ponto de vista, enquanto que o termo "multimedia" é referenciado a partir do ponto de vista de usuário. <br /><br /><strong>Tipos de bases de dados multimédia</strong> <br />Existem numerosos tipos diferentes de bases de dados multimedia, incluindo: <br />A autenticação de dados multimédia (também conhecida como uma verificação de dados multimédia, ou seja, a varredura retina), é uma comparação 1:1 dados <br />A identificação de dados multimédia é uma comparação dos dados de um-para-muitos (isto é, senhas e números de identificação pessoal <br />Um recém-emergentes do tipo de dados multimédia, é a Biometria de dados multimédia; que é especializada em humanos verificação automática baseados em algoritmos de o seu perfil comportamental ou fisiológica. <br /><br />Este método de identificação é superior aos métodos tradicionais de dados multimédia exigindo a típica entrada de números de identificação pessoal e senhas - <br />Devido ao facto de a pessoa ser identificada, não necessita de estar fisicamente presentes, onde a identificação verifique se está a passar. <br />Isso elimina a necessidade de que a pessoa seja digitalizado para lembrar um PIN ou senha. Fingerprint identificação tecnologia também é com base neste tipo de banco de dados multimédia. <br /><br /><strong>Dificuldades envolvidas com bases de dados multimédia</strong> <br />A dificuldade de tornar estes diferentes tipos de bases de dados multimédia facilmente acessível aos seres humanos é: <br />A tremenda quantidade de largura de banda que consomem; <br />Criando-Globalmente aceites dados de tratamento de plataformas, tais como o Joomla, e as considerações especiais que estas novas estruturas de dados multimédia exigem.<br /><br />Globalmente, aceitou criar um sistema operacional, incluindo armazenamento e gestão de recursos aplicável programas necessidade de acomodar a vasta informação multimédia Global fome. <br /><br />Multimedia bases necessidade de ter em acomodar várias interfaces humanas de manipular objetos 3D-interativo, em uma lógica de forma perceptível (ie SecondLife.com). <br />Acomodar os vastos recursos necessários para utilizar a inteligência artificial é potencialidades de computador, incluindo métodos de análise imagem e som. <br />A histórica bancos de dados relacionais (ou seja, a Objetos binários grandes - BLOBs-desenvolvidos para bases de dados SQL para armazenar dados multimídia) não apoiar convenientemente conteúdo baseado em pesquisas de conteúdos multimédia. <br /><br />Isto é devido ao banco de dados relacional não ser capaz de reconhecer a estrutura interna de uma Binary Large Object interno e, por isso, dados multimídia componentes que não podem ser recuperadas ... <br /><br />Basicamente, um banco de dados relacional é um "tudo ou nada"-estrutura recuperada e armazenados em arquivos como um todo, o que faz um banco de dados relacional para tornar completamente ineficaz multimédia dados facilmente acessíveis aos seres humanos. <br /><br />A fim de acomodar eficazmente dados multimídia, um banco de dados do sistema de gestão, tais como um Object Oriented Database (OODB) ou Objeto Relacional Database Management System (ORDBMS). <br />Exemplos de Objeto Relacional Database Management Systems incluir Odaptor (HP): UniSQL, ODB-II, e Illustra. <br />O flip-lado da moeda, é que contrariamente não-multimídia dados armazenados em bancos de dados relacionais, multimédia dados não podem ser facilmente indexados, recuperados ou classificadas, exceto por meio de social bookmarking ranking de classificação e, por seres humanos reais. <br /><br />Isto é possível graças metadados recuperação métodos, vulgarmente designado por tags, e de codificação. É por isso que você pode procurar por cães, como exemplo, e uma imagem surge com base em seu texto o termo pesquisado. <br />Isto também é referido um modo esquemático. Considerando que fazer uma pesquisa com uma imagem de um cão para localizar outras imagens cão é referida como modo paradigmático. <br /><br />No entanto, metadados recuperação, pesquisa, e identificar métodos de falta grave em ser capaz de definir adequadamente o espaço ea textura uniforme descrições, tais como as relações espaciais entre objetos 3D, etc <br />A Content-Based Retrieval método de pesquisa de dados multimédia (CBR), no entanto, é precisamente à base desses tipos de pesquisas. Em outras palavras, se você procura uma imagem ou sub-imagem, você seria então mostrado outras imagens ou sub-imagens que, de alguma forma relacionados com a sua particular a pesquisa, por meio de cores padrão ou ratio, etc</p>]]></description>
			<category>Introdução</category>
			<pubDate>Tue, 29 Aug 2017 21:43:55 -0300</pubDate>
		</item>
		<item>
			<title>Introdução ao PostgreSQL</title>
			<link>http://backup/portal/servidores/postgresql/introducao-ao-postgresql/introducao-ao-postgresql.html</link>
			<guid isPermaLink="true">http://backup/portal/servidores/postgresql/introducao-ao-postgresql/introducao-ao-postgresql.html</guid>
			<description><![CDATA[<div>

<h4 style="text-align: justify;"><strong>PostgreSQL</strong></h4>

<p style="text-align: justify;"><br />PostgreSQL é um sistema gerenciador de banco de dados objeto relacional (SGBDOR), desenvolvido como projeto de código aberto.<br /><br /><strong>Características</strong><br />Atualmente, o PostgreSQL é um dos SGBDs (Sistema Gerenciador de Bancos de Dados) de código aberto mais avançados, contando com recursos como:<br /><br />    Consultas complexas<br />    Chaves estrangeiras<br />    Integridade transacional<br />    Controle de concorrência multi-versão<br />    Suporte ao modelo híbrido objeto-relacional<br />    Ele tem facilidade de Acesso<br />    Gatilhos<br />    Visões<br />    Linguagem Procedural em várias linguagens (PL/pgSQL, PL/Python, PL/Java, PL/Perl) para Procedimentos armazenados<br />    Indexação por texto<br />    Estrutura para guardar dados Georeferenciados PostGIS<br /><br /><strong>Histórico</strong><br />O PostgreSQL é um dos resultados de uma ampla evolução que se iniciou com o projeto Ingres, desenvolvido na Universidade de Berkeley, Califórnia. O líder do projeto, Michael Stonebraker, um dos pioneiros dos bancos de dados relacionais, deixou a universidade em 1982 para comercializar o Ingres, porém retornou a ela logo em seguida.[4]<br /><br />Após seu retorno a Berkeley, em 1985, Stonebraker começou um projeto pós-Ingres com o objetivo de resolver problemas com o modelo de banco de dados relacional. O principal problema era a incapacidade do modelo relacional compreender “tipos” (atualmente, chamados de objetos), ou seja, combinações de dados simples que formam uma única unidade.[4]<br /><br />O projeto resultante, chamado Postgres, era orientado a introduzir a menor quantidade possível de funcionalidades para completar o suporte a tipos. Estas funcionalidades incluíam a habilidade de definir tipos, mas também a habilidade de descrever relações - as quais até este momento eram amplamente utilizadas, mas completamente mantidas pelo usuário. No Postgres, o banco de dados "compreendia" as relações e podia obter informações de tabelas relacionadas utilizando regras.[4]<br /><br />Iniciando em 1986, a equipe divulgou uma série de documentos descrevendo a base do sistema e em 1988 o projeto possuía um protótipo funcional. A versão 1 foi liberada para um grupo pequeno de usuários em junho de 1989, seguida pela versão 2 com um sistema de regras reescrito em junho de 1990. Para a versão 3, liberada em 1991, o sistema de regras foi reescrito novamente, mas também foram adicionados suporte para múltiplos gerenciadores de armazenamento e um melhorado motor de consultas. Já em 1993, Postgres havia crescido imensamente em popularidade e possuía uma grande demanda por suporte e por novas funcionalidades. Após a liberação da versão 4, a qual era uma simples versão de limpeza, o projeto foi oficialmente abandonado pela Universidade de Berkeley.[4]<br /><br />Entretanto, devido ao fato do seu código fonte estar sob uma licença BSD, o seu desenvolvimento foi continuado. Em 1994, dois estudantes , Andrew Yu e Jolly Chen, adicionaram um interpretador SQL para substituir a linguagem QUEL (desenvolvida para o Ingres) e o projeto foi renomeado para Postgres95. Com a divulgação de seu código pela Internet, Postgres95 iniciou uma nova vida como software open source.[4]<br /><br />Em agosto de 1996, Marc Fournier, Bruce Momjian e Vadim B. Mikheev lançaram a primeira versão externa da Universidade de Berkeley e deram início à tarefa de estabilizar o código herdado. Também em 1996, o projeto foi renomeado para PostgreSQL a fim de refletir a nova linguagem de consulta ao banco de dados: SQL. A primeira versão de PostgreSQL, a 6.0, foi liberada em janeiro de 1997. Desde então, um grupo de desenvolvedores e de voluntários de todo o mundo, coordenados pela Internet, têm mantido o software e desenvolvido novas funcionalidades.<br /><br />As principais características acrescentadas nas versões 6.x são o en:MVCC (Multiversion Concurrency Control – Controle de Concorrência Multiversões), melhorias no SQL e novos tipos de dados nativos (novos tipos de datas e hora e tipos geométricos).<br /><br />Em maio de 2000 foi liberada a versão 7.0. As versões 7.x trouxeram as seguintes novas funcionalidades: Write-Ahead Log (WAL), esquemas SQL, outer joins, suporte a IPv6, indexação por texto, suporte melhorado a SSL e informações estatísticas do banco de dados.<br /><br />A versão 8.0 foi lançada em janeiro de 2005 e entre outras novidades, foi a primeira a ter suporte nativo para Microsoft Windows (tradicionalmente, o PostgreSQL só rodava de forma nativa em sistemas Unix e, em sistemas Windows - através da biblioteca Cygwin). Dentre as muitas novidades da versão 8.x, pode-se destacar o suporte a tablespaces, savepoints, point-in-time recovery, roles e Two-Phase Commit (2PC). Em setembro de 2010 foi lançada a versão mais recente: 9.0.<br /><br /><strong>Desenvolvimento do Projeto</strong><br />O PostgreSQL é um projeto open source coordenado pelo PostgreSQL Global Development Group. Embora as atividades do grupo sejam patrocinadas por diversas organizações de todo o mundo, seu modelo de desenvolvimento é o modelo Bazar (originalmente apresentado em A Catedral e o Bazar de Eric S. Raymond).<br /><br />Portanto, o desenvolvimento do PostgreSQL é feito por um grupo de desenvolvedores, em sua maioria voluntários, espalhados por todo o mundo e que se comunicam via Internet. Logo, trata-se, de um projeto direcionado pela comunidade de desenvolvedores e de usuários, a qual qualquer pessoa pode se juntar, bastando se inscrever em listas de discussão e participar delas.<br /><br />Voluntários interessados em contribuir com o projeto também podem consultar as sugestões de tarefas de desenvolvimento de novas funções e de correções de erros que são publicadas na lista TODO ou apresentar suas próprias sugestões. O código desenvolvido é submetido à equipe do projeto que pode aceitá-lo e incluí-lo nas novas versões ou recusá-lo. Voluntários também podem colaborar gerando documentação ou realizando traduções!<br /><br />As ferramentas utilizadas para o apoio ao desenvolvimento são o sistema de gestão de fontes CVS (Concurrent Version System), listas de discussão, servidor de news e salas de bate-papo (IRC).<br />Estruturas de Decisão<br /><br />O Projeto PostgreSQL é desenvolvido e direcionado pela sua comunidade de desenvolvedores e de usuários. Para coordenar o projeto há uma equipe central (core team) composta por sete desenvolvedores e um grupo de committers CVS. O código fornecido por voluntários é avaliado e aceito ou rejeitado pelos committers.<br /><br />Este modelo de desenvolvimento de software, baseado no modelo Bazar originalmente apresentado em A Catedral e o Bazar de Eric S. Raymond, possibilita o desenvolvimento de software com qualidade devido, principalmente, a permitir:<br /><br />    Tratar usuários como parceiros e/ou desenvolvedores. Eles contribuem diretamente com o desenvolvimento do software apresentando os problemas enfrentados, suas necessidades, suas sugestões de solução e, até mesmo, seu próprio código fonte de solução. Assim, usuários auxiliam de forma pró-ativa nas melhorias e na depuração do software.<br />    Reutilizar código fonte.<br />    Lançar rapidamente e frequentemente novas versões. Com uma base ampla de usuários testadores do software, os eventuais problemas são rapidamente identificados e sugestões de solução também aparecem com rapidez.<br /><br /><strong>Estado Atual</strong><br />Além de doações, o projeto PostgreSQL se sustenta pelo patrocínio de diversas empresas, entre as quais se destacam: Fujitsu, Hub.Org, NTT Group, Red Hat, Skype e SRA.<br /><br />O software tem adquirido prestígio na comunidade Linux, tendo recebido diversas vezes o prêmio Linux Journal Editor's Choice de melhor sistema de gerenciamento de banco de dados (SGBD).<br /><br />Uma diversidade de módulos adicionais está disponível através do pgfoundry.<br /><br />A aceitação do PostgreSQL tem se ampliado para além da comunidade de código aberto. Há entre os seus usuários grandes empresas internacionais, órgãos governamentais de vários países e universidades de prestígio mundial. Existe uma lista dos principais usuários no Brasil e no mundo e, também, há alguns estudos de caso de aplicações que utilizam o PostgreSQL.<br /><br />Fonte:<br />Wikipédia - <a href="https://pt.wikipedia.org/wiki/PostgreSQL">https://pt.wikipedia.org/wiki/PostgreSQL</a></p>

<p style="text-align: justify;"> </p>

<p style="text-align: justify;"><strong>Sumário Previsto</strong><br /><br />Parte 1<br />1 - Introdução: história, características, recursos e novidades<br />2 - Projeto do Servidor<br />3 - Dimensionamento de hardware<br />4 - Ferramentas<br />5 - Instalação com pacotes (no Linux) e com instalador (no Windows)<br />6 - Linguagem SQL<br />    DCL - Data Control Language: comandos grant e revoke (administração dos usuários, grupos e privilégios)<br />    DDL - Data Definition Language: comandos de definição e alteração de dados: create, drop, alter, rename, etc<br />    DML - Data Manipulation Language: comandos para manipular dados: insert, update, delete<br />    DQL - Data query Language: comandos para consutla de dados: select<br />7 - Catálogo do Sistema<br />8 - Tipos Geográficos<br />9 - Dicas<br />10 - Exercícios<br />11 - Scripts SQL<br /><br />Parte 2<br />1 - Segurança<br />2 - Linguagem do lado Server<br />3 - Modelagem de dados<br />    - Criar as tabelas do modelo de Vídeo Locadora<br />    - Gerar um DER do banco com o dbVisualizer<br />4 - Performance do SGBD<br />5 - Bancos de testes<br />6 - Administração do PostgreSQL<br />    6.1 - Instalação via fontes<br />    6.2 - Backup e Restore<br />    6.3 - Importação e Exportação<br />    6.4 - Configurações<br />    6.5 - Clusters<br />    6.6 - Esquemas<br />    6.7 - Manutenção<br />    6.8 - Monitoramento<br />    6.9 - Scripts Shell<br />    6.10 - Servidor<br />    6.11 - Table Spaces<br />    6.12 - Administração de Usuários<br />    6.13 - Conectividade</p>

<p style="text-align: justify;"> </p>

</div>]]></description>
			<category>Introdução</category>
			<pubDate>Mon, 24 Jul 2017 10:24:08 -0300</pubDate>
		</item>
	</channel>
</rss>
